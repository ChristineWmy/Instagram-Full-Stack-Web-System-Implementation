#!/bin/bash
# insta485db

# Stop on errors
# See https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi


create_msg="+ mkdir -p var/uploads
+ sqlite3 var/insta485.sqlite3 < sql/schema.sql
+ sqlite3 var/insta485.sqlite3 < sql/data.sql
+ cp sql/uploads/* var/uploads/"

destroy_msg="+ rm -rf var/insta485.sqlite3 var/uploads"

reset_msg=$destroy_msg$create_msg



# Parse argument.  $1 is the first argument
case $1 in
  "create")
    mkdir -p var/uploads
    sqlite3 var/insta485.sqlite3 < sql/schema.sql
    sqlite3 var/insta485.sqlite3 < sql/data.sql
    cp sql/uploads/* var/uploads/
    echo "$create_msg"
    ;;

  "destroy")
    rm -rf var/insta485.sqlite3 var/uploads
    echo "$destroy_msg"
    ;;

  "reset")
    rm -rf var/insta485.sqlite3 var/uploads
    mkdir -p var/uploads
    sqlite3 var/insta485.sqlite3 < sql/schema.sql
    sqlite3 var/insta485.sqlite3 < sql/data.sql
    cp sql/uploads/* var/uploads/
    echo "$reset_msg"
    ;;

  "dump")
    echo "+ sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM comments'"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM comments'
    echo "+ sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM following'"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM following'
    echo "+ sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM likes'"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM likes'
    echo "+ sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM posts'"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM posts'
    echo "+ sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM users'"
    sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM users'
    ;;
  *)
    usage
    exit 1
    ;;
esac